---
layout: lesson
title: Posters
category: extra1
description: Creating a poster in LaTeX.
---

There are many different ways to get the general structure of a poster into LaTeX. In this lesson we will discuss the three most prevalent methods, which are:
<ol>
<li> The <code>a0poster</code> documentclass, </li>
<li> The <code>beamerposter</code> package for the <code>beamer</code> documentclass,</li>
<li> The <code>tikzposter</code> documentclass.</li>
</ol>
We will briefly discuss the main differences in user experience and output between these three methods, as well as give a short tutorial on how to get started with each method. 

## Main differences between the three methods
The <code>a0poster</code> documentclass is the most similar to the writing of a document in the <code>article</code> documentclass with which you will be familiar. The main differences are as follows; firstly you will need to make use of a package which allows the text to be divided into columns, which flow naturally into each other, secondly the slightly different structure needed to present figures and tables. You can use section titles as you would in any LaTeX article, and you will have slightly more space for content. The main drawback of <code>a0poster</code> is the relative simplicity of the poster layout (especially for beginners at poster making). You can change the colours of the text, and play with the font and fontsizes, but it is much harder to incorporate things like special section headers, or a nice title box. 

The <code>beamerposter</code> package is a package that can be used within the <code>beamer</code> documentclass. This means that you can use the same design elements as you would in a beamer presentation. Most crucially this means that you can use one the many included beamerthemes, use the UvA beamertheme, or even design a theme for yourself (though this is quite complicated for LaTeX beginners). You can also use the block, exampleblock, and alertblock environments you may be used to from beamer. You can use the columns environment to split your poster up into columns. Differently from the columns in <code>a0poster</code> these do not flow into each other. This has the benefit that you can easily decide what goes in which column, though it is more cumbersome to work with. The mayor drawback of <code>beamerposter</code> is the fact that the poster is started in the centre of the page and builds out from there. So if you do not have an entirely filled poster, this may look a bit strange.

The <code>tikzposter</code> documentclass probably takes the most getting used to. It is fairly similar to <code>beamerposter</code> in look, though it generates a nice title block via the command <code>maketitle</code>, which looks good but does make it difficult to include an image in the header. The structure of the poster is again worked in columns, like the ones in <code>beamerposter</code> though the syntax for typesetting them is slightly different. All of the content must be placed in blocks, for which the built in theme options have a nice layout. You can also add notes on top of your blocks. Just like in <code>a0poster</code> the method for including figures and tables is a little different than you are used to, though not at all complicated. 

## The <code>a0poster</code> documentclass
For a poster created in the documentclass <code>a0poster</code> we start our document with the following code:
```latex
\documentclass[a0, portrait]{a0poster}
```
The options given to the documentclass here define the size of your poster and its orientation (landscape or portrait). 

The next step is to load any packages that you would normally need, think of <code>babel</code>, <code>graphicx</code>, <code>tikz</code>, etc. 

Next up you need to load the package <code>multicol</code>, which you will need to split your poster into columns. This should be done like this:
```latex
\usepackage{multicol}
\columnsep=100pt
```
If you would like the columns to be closer together, or further apart, you can change the value of <code>columnsep</code>.

You can now start the document as usual with <code>\begin{document}...\end{document}</code>.

To create a header for your poster with a title and an institute logo (or another image), you can use the <code>minipage</code> environment. Here is an example of code for such a header.
```latex
\begin{minipage}{.7\textwidth}
  \VeryHuge Look I'm making a poster \\ [0.75cm]
  \Large P. Ostermaker \\
  \Large Unversity of Amsterdam
\end{minipage}
%
\begin{minipage}{.3\textwidth}
  \includegraphics[]{instituteLogo.png}
\end{minipage}
```
You can use commands like <code>\bf</code> or <code>\textbf{...}</code> to print (parts of) the header in bold type. You can change the size of the font by playing with the commands like <code>Large</code> and <code>VeryHuge</code>. See this [Reference Guide](https://www.overleaf.com/learn/latex/Font_
sizes,_families,_and_styles#Reference_guide) for a list of available size options.

To divide your content into columns in <code>a0poster</code> we need to use the package <code>multicol</code> as shown above. Inside the document at the moment where we would like our columns to start, we use the following command:
```latex
\begin{multicols}{2}
  ...
\end{multicols}
```
The number in the braces at the top gives the number of columns the text will be divided into. The entire content of your poster can now be typeset inside this environment. The text will be automatically split up into two columns. 

In <code>a0poster</code> you can typeset an abstract, bibliography, and sections (with or without numbers) as you usually would in a <code>.tex</code> file with the documentclass <code>article</code>. 

Figures such as images, tables, or tikzpictures can be inserted into the poster. However, you cannot make use of the <code>figure</code> environment. Instead, we need to place any figures into a <code>center</code> environment like so:
```latex
\begin{center}
  \includegraphics[options]{filename.extension}
  \captionof{figure}{Insert your caption here}
\end{center}
%
\begin{center}
  \begin{tikzpicture}
    ...
  \end{tikzpicture}
  \captionof{figure}{...}
\end{center}
```
Note that we use the command <code>\captionof{}{}</code> here. This command can only work if the package <code>caption</code> has been loaded in the preamble. The first argument for <code>\captionof</code> is the type of content you are writing a caption for, in this case a figure, but this could also be table for instance. 

If you would like to play with the colour of your text you can do so by including <code>\usepackage[svgnames]{xcolor}</code> into your preamble. This will give you access to many colours that have already been named. You can then use the following commands to make parts of your text another colour. 
```latex
Here follows some regular text, \color{BlueViolet} from now on the text has changed colour, \color{Black} and then we are back to normal. 
```
The very handy [Reference Guide](https://www.latextemplates.com/svgnames-colors) gives the full list of colours and their svgnames.

## The <code>beamerposter</code> package for the beamer documentclass
A poster created with the <code>beamerposter</code> package needs to be created in the beamer documentclass. We start our file with the following command:
```latex
\documentclass[xcolor={svgnames}]{beamer}
```
Note that the option given to the beamer documentclass here is not strictly necessary but does enricht your poster as it gives access to about 150 colours to use. 

Next step is to load any packages that you would normally need, thick of <code>babel</code>, <code>graphicx</code>, <code>tikz</code>, etc.

Next up you get to choose your beamertheme and colour. You do this by using these commands:
```latex
\usetheme{...}
\usecolortheme{...}
```
You can choose which theme and colour you would like from the very handy [Beamer Theme Matrix]{https://hartwork.org/beamer-theme-matrix/}. You can then fill in the names of the theme an colour you choose on the dots. You can also use the UvA beamer theme, which can be downloaded [here]{http://bliggy.net/UvATemplates.html}.

The next and <b>most important</b> step, is to load the package that will turn your beamer file into a poster.
```latex
\usepackage[orientation=portrait,size=a0,scale=1.4]{beamerposter}
```
These options passed to the package determine whether the poster is in portrait or landscape mode, how big the poster is, and how much the fonts are sized up. 

After this step you only need to define the title etc, so that this can be inserted correclty into the margins of your poster. For example:
```latex
\title{Look I'm making a poster}
\author{P. Ostermaker}
\institute{University of Amsterdam}
```

Now you are ready to start the actual document. You do this, like always, by beginning the document. But in the case of a poster in beamer you also need to start the one and only frame of your beamer document. 
```latex
\begin{document}
  \begin{frame}
    ...
  \end{frame}
\end{document}
```

The way in which you create columns in <code>beamerposter</code> is to use the columns environment. You can make several different amounts and sizes of columns, each under (or included) in the others. Every time the syntax is similar. Below follows an example for three columns of equal width, below whcih we have two columns of varying widths. 
```latex
\begin{columns}
  \begin{column}{.33\textwidth}
    ...
  \end{column}
  %
  \begin{column}{.33\textwidth}
    ...
  \end{column}
  %
  \begin{column}{.33\textwidth}
    ...
  \begin{column}
\end{columns}
%
\begin{columns}
  \begin{column}{.7\textwidth}
    ...
  \end{column}
  %
  \begin{column}{.3\textwidth}
    ...
  \end{column}
\end{columns}
```
With these columns (or without if you would like your text to stretch across the entire poster) you can insert pieces of text, figures, tikzpictures, tables, blocks, bibliography, etc. You can do this all in the usual beamer way. 

If you would like to play with the colours of your text you can use the following commands to make parts of your text another colour. 
```latex
Here follows some regular text, \color{BlueViolet} from now on the text has changed colour, \color{Black} and then we are back to normal. 
```
Note that you do need to have the option <code>xcolor={svgnames}</code> in your documentclass to be able to use these colours and many others. Please see the [Reference Guide]{https://www.latextemplates.com/svgnames-colors} for the full list of colours and their svgnames. 

## The <code>tikzposter</code> documentclass

For a poster created with the <code>tikzposter</code> documentclass we start our file with the following command:
```latex
\documentclass[24pt, a0paper, portrait]{tikzposter}
```
The options given to the documentclass here, define the fontsize of your text, the size of the paper, and the orientation of the poster (landscape or portrait). 

Next step is to load any packages that you would normally need, think of <code>babel</code>, <code>graphicx</code>, <code>tikz</code>, etc. 

Next up you get to choose your preferred theme. You do this by using this command:
```latex
\usetheme{...}
```
You can choose which theme and colour you would like from the very handy [Tikzposter Reference Guide]{https://www.overleaf.com/learn/latex/Posters#Reference_guide}. You can then fill in the name of the theme you choose on the dots.

You can now define the title, etc. In <code>tikzposter</code> the <code>\maketitle</code> command is how we make the header, so we need this information to be able to do that. 
```latex
\title{Look I'm making a poster}
\author{P. Ostermaker}
\institute{University of Amsterdam}
```

Now you are ready to start the actual document. You do this, like always, by beginning the document. You can also immediately make the title header. 
```latex
\begin{document}
  \maketitle
  
  ...
\end{document}
```

The way in which you create columns in <code>tikzposter</code> is to use the columns environment, just like for <code>beamerposter</code>. However, each column itself is not defined by using <code>]\begin{column}{width}</code>. Instead you begin a column with a <code>\column{width}</code> command. In <code>tikzposter</code> you cannot nest these types of columns together. If you want to split a column into columns for a while, you will need to use the <code>multicol</code> package. Below you can see an example for three columns of equal width, below which we have two columns of varying widths. 
```latex
\begin{columns}
  \column{.33}
    ...
  %
  \column{.33}
    ...
  %
  \column{.33}
    ...
\end{columns}
%
\begin{columns}
  \column{.7}
    ...
  %
  \column{.3}
    ...
\end{columns}
```
Within these columns (or without if you would like your text to strech across the entire poster) you can insert pieces of text, figures, tikzpictures, tables, bibliography, etc.

In <code>tikzposter</code> any content that you want to include on the poster much be inserted in a block. This is how to do that: 
```latex
\block{title}{content}
``` 
Your block does not need to have a title. If you'd rather it didn't you can leave the first set of braces empty. A fun feature of <code>tikzposter</code> is the ability to add notes on a block. This can be done as follows:
```latex
\block{title}{content \vspace{height}}
\note[targetoffsetx=size, targetoffsety=size, width=size]{note content}
```
Here the command <code>\vspace{height}</code> creates a given amount of vertical whitespace so that the note will nicely fit in the block environment and not cover up  the text. The first two options for the <code>\note</code> command are used to place the note exactly where you would like it in the block (i.e. in the bit of whitespace we generated with the <code>vspace</code> command), and the <code>width</code> option is used to define the width of the note. 

Figures such as images, tables, or tikzpictures can be inserted into the poster. However, you cannot make use of the <code>figure</code> environment. Instead, we need to place any figures into a <code>center</code> environment like so:
```latex
\begin{center}
  \includegraphics[options]{filename.extension}
  \captionof{figure}{Insert your caption here}
\end{center}
%
\begin{center}
  \begin{tikzpicture}
    ...
  \end{tikzpicture}
  \captionof{figure}{...}
\end{center}
```
Note that we use the command <code>\captionof{}{}</code> here. This command can only work if the package <code>caption</code> has been loaded in the preamble. The first argument for <code>captionof</code> is the type of content you are writing a caption for, in this case a figure, but this could also be table for instance. 

If you would like to play with the colours of your text you can use the package <code>color</code> to define your own colours by including a command in the preamble, i.e. <code>\definecolor{MyPink}{RGB}{194, 19, 182}</code> and then using the following commands to make parts of your text another colour. 
```latex
Here follows some regular text, \color{MyPink} from now on the text has changed colour, \color{black} and then we are back to normal.
``` 
Note that <code>tikzposter</code> does not support the use of the <code>svgnames</code> option. That is why we need to predefine our own colours (<code>tikzposter</code> does come with several colours and their names included, though this is not an extensive range).

As you may have spotted, the colours we predefined ourselves are given in RGB form. It is very easy to find the RGB form of any colour, simply by Googling the phrase <i>colour picker</i>, and using Google's colour tool.
