---
layout: lesson
title: Gevorderde documentstructuur
category: week2
description: Een artikel schrijven.
---

Vorige week zagen we al wat de global structuur van een LaTeXdocument is. In deze les gaan we onze tekst nog meer structuur geven. Denk aan hoofdstukken, paragrafen, inhoudsopgave, verwijzingen, bibliografie. Ook behandelen we tabellen en plaatjes.

h2. Document classes

We zagen vorige week dat een *document class* een verzameling is van instellingen die past bij een bepaald type document. De document class stel je in met

{% highlight latex %}
\documentclass[options]{class}
{% endhighlight %}

waarbij @options@ een lijst is van opties gescheiden door komma's. Het commando

{% highlight latex %}
\documentclass[11pt,twoside,a4paper]{article}
{% endhighlight %}

geeft bijvoorbeeld een artikel met tekstgrootte 11pt, met opmaak voor dubbelzijdig printen op A4-papier.

Er zijn veel document classes voor LaTeX. *Standard document classes* zijn classes die altijd beschikbaar zijn. Belangrijke standard document classes zijn

table(table).
|_.class   |_.documenttype |
| @article@ | artikelen in wetenschappelijke tijdschriften, korte rapporten, aantekeningen |
| @report@  | langere rapporten met hoofdstukken, kleine boeken, theses |
| @book@    | boeken |
| @beamer@  | presentaties |

Veelgebruikte opties bij deze classes zijn de volgende.

table(table).
|_.optie   |_.beschrijving |
| @10pt@, @11pt@, @12pt@ | stelt de grootte van de tekst in, standaard @10pt@ |
| @a4paper@, @letterpaper@ | stelt de papiergrootte in, standaard hangt van je distributie af |
| @twoside@, @oneside@ | bepaalt of het document voor enkelzijdig of dubbelzijdig printen wordt opgemaakt |


h2. De document-omgeving

Vorige week zagen we hoe we de _topmatter_ zetten met @\author@, @\title@, @\date@ en @\maketitle@. In deze les zien we meer commando's om de structuur aan te geven in een @article@, @report@ of @book@.

Voor het maken van hoofdstukken en paragrafen gebruik je de volgende commando's.

table(table).
|_. commando 		|_. niveau	| &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |
| @\part@			|	-1		| (optioneel)|
| @\chapter@		|	0		| (alleen in @book@ en @report@)|
| @\section@		|	1		| |
| @\subsection@		|	2		| |
| @\subsubsection@	|	3		| |
| @\paragraph@		|	4		| |
| @\subparagraph@	|	5		| |

Het noogste niveau in een @article@ is @\section@ en het hoogste niveau in @book@ en @report@ @\chapter@. Daarboven _kan_ @\part@ worden gebruikt, maar dat hoeft niet.

Met het commando @\tableofcontents@ kun je een *inhoudsopgave* maken.

Bij artikelen is het gebruikelijk om aan het begin een *samenvatting* te zetten. Dit gaat in de @abstract@ omgeving.

h2. Figuren en tabellen

Tabellen maak je met de @tabular@-omgeving.

<div class="example">

<img src="/../svg/table.svg" height="64" alt="Voorbeeld van een tabel."/>

</div>

{% highlight latex %}

\begin{tabular}{llr}
\hline
naam & waarde & aantal \\
\hline
aap & 10 & 20 \\
noot & 10 & 20 \\
\hline
\end{tabular}

{% endhighlight %}

Met de opties @l@, @c@ en @r@ geef je het aantal kolommen en het type kolom aan: links uitgelijnd, rechts uitgelijn of gecentreerd. Met @\hline@ maak je een horizontale lijn.

Om de tabel netjes met een nummer en een onderschrift op de pagina te krijgen gebruiken we de @table@-omgeving.

{% highlight latex %}

\begin{table}
  \centering
  \begin{tabular}{llr}
    \hline
    naam & waarde & aantal \\
    \hline
    aap & 10 & 20 \\
    noot & 10 & 20 \\
    \hline
  \end{tabular}
  \caption{De waarde van aap en noot}
  \label{tab:aapnoot}
\end{table}

{% endhighlight %}

Je ziet dat we de @tabular@-omgeving in een @table@-omgeving hebben gezet. De @table@-omgeving maakt een zogenaamde *float*. Dit is een vak waarvan LaTeX zelf bepaalt waar het komt te staan op de pagina. LaTeX probeert tabellen en figuren bij elkaar te zetten zodat de tekst zo min mogelijk onderbroken wordt. We hebben met @\caption@ een bijschrijft toegevoegd en met @\label@ een label, waarmee we naar deze tabel kunnen verwijzen, zie de volgende paragraaf. Zie "Wikibooks/Tables":http://en.wikibooks.org/wiki/LaTeX/Tables voor meer opties.

Figuren kunnen we laden met het package @graphicx@ en het commando @\includegraphics@. Ondersteunde bestandstypen zijn pdf, png en jpg. Bijvoorbeeld als je een afbeelding @figuur.pdf@ wilt zetten

{% highlight latex %}

\includegraphics{figuur}

{% endhighlight %}

Je geeft @includegraphics@ als argument de naam van het bestand _zonder extensie_. LaTeX zoekt vervolgens zelf een bestand met deze naam en een extensie die het ondersteunt. Dit gaat in een bepaalde volgorde. Let dus op als je bestanden hebt met dezelfde naam en een andere extensie.

Voor figuren is er ook een speciale _float_, de @figure@-omgeving:

{% highlight latex %}

\begin{figure}
\includegraphics{figuur}
\caption{Een figuur.}
\label{fig:voorbeeld}
\end{figure}

{% endhighlight %}

Zie "Wikibooks/Importing Graphics":http://en.wikibooks.org/wiki/LaTeX/Importing_Graphics voor meer opties.

h2. Verwijzingen

We hebben in de vorige les gezien hoe we dynamisch kunnen verwijzen naar formules met @\label@ en @\eqref@. Op dezelfde manier kunnen we verwijzen naar hoofdstukken, paragrafen, stellingen, definities, etc. Bijvoorbeeld voor een @\section@:

{% highlight latex %}
\section{Afgeleide}
\label{sec:afgeleide}

\section{Primitieve}
In paragraaf \ref{sec:afgeleide} hebben we gezien wat een afgeleide is.

{% endhighlight %}

Voor @\part@, @\chapter@, etc werkt verwijzen op dezelfde manier. Voor stelling-omgevingen zet je het label net na de @\begin{stelling}@. Bij floats als @figuur@ en @table@ gebruik je een label zoals aangegeven in de vorige paragraaf.

Je moet een aantal keer compileren voordat de juiste verwijzing verschijnt. Het voordeel van deze manier van verwijzen is dat de verwijzing blijft kloppen als je tekst invoegt of de volgorde verandert.

h2. Bibliografie

(nog te schrijven)

<div class="panel panel-primary">
<div class="panel-heading">
<h3 class="panel-title">Opdracht</h3>
</div>
<div class="panel-body">

Maak een zo compact mogelijk LATEX-artikel, dat het volgende doet:
# het is een artikel
# jij bent auteur; de titel is “A short proof of the Four Color Theorem” (gebruik LATEX om dit te formatten)
# neem na de titel een illustratie op van het vierkleurenprobleem (alleen centreren, geen onderschrift oid. toevoegen)
# maak vier genummerde secties: Introduction, Definitions, Lemmas, Proof
# maak een inhoudsopgave (via LATEX, niet zelf gaan tikken)
# maak de titels in de inhoudsopgave klikbaar (als hyperreferenties, dus)
# maak een bibliografie met tenminste  een verwijzing: het artikel van Appel en Haken met hun bewijs van de vierkleurenstelling, inclusief het aantal pagina’s (p. xx–yy).
# de introductie bevat een verwijzing naar een artikel uit je bibliografie (“The proof of Appel and Haken of the Four Colour Theorem comprised X pages [citatienummer]’).
# Neem in je In Definition-sectie een zin op: “We define $\Lambda$ to be:”, met daarna een gedisplayde en genummerde vergelijking met de formule $\Lambda = 1/\Delta$. Label die formule met @\label{lambda}@ Neem in je Lemma-paragraaf een zin op die verwijst naar dit label: “From formula [formulenr], it is easy to see that $\Delta = 1/ \Lambda$.''
# label je Lemma-paragraaf met @\label{lemmas}@. Schrijf in de Proof-sectie een zin die verwijst naar dit label. ''Now we will prove the main theorem, using the four lemma's we proved in Section [sectienr].''
# Optioneel: schrijf het artikel af en submit het bij Mathematische Annalen.

</div></div>